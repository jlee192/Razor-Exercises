@{
    Layout = "~/_Layout.cshtml";
    Page.Title = string.Format("Razor - {0}", "Exercise 03");

    // global variables
    var title = "";
    var artistid = "0";
    var releaseyear = "";
    var releaselabel = "";

    // Obtain a list
    var db = Database.Open("CHINOOK");
    var artistquery = @"SELECT ArtistId, Name FROM Artists ORDER BY ArtistId";
    var artistlist = db.Query(artistquery);

    // validator controls; execute on the server side
    Validation.Add("Title",
        Validator.Required("Title is required"),
        Validator.StringLength(160, 1, "Title name is limited to 160 characters"));

    //Validation.Add("ArtistId",
    //    Validator.Integer("Artist ID must be an integer"),
    //    Validator.Required("Artist must be selected"));

    Validation.Add("ReleaseYear",
        Validator.Required("Release year is required"),
        Validator.Integer("Release year must be a number"),
        Validator.Range(1950, DateTime.Now.Year, "Year is out of range, 1950 to today"));

    Validation.Add("ReleaseLabel",
        //Validator.StringLength(50, 1, "Max 50 characters"));
        Validator.StringLength(50, 0, "Label is limited to 50 characters."));
}

@section banner {
    <h1>@Page.Title</h1>
}

@if (IsPost)
{
    // retrieve the data from the form
    title = Request.Form["Title"];
    artistid = Request.Form["ArtistList"];
    releaseyear = Request.Form["ReleaseYear"];
    releaselabel = Request.Form["ReleaseLabel"];
    var thebutton = Request.Form["FormButton"];

    if (thebutton.Equals("Clear"))
    {
        // empty the form fields
        title = ""; // string
        artistid = "0"; // int
        releaseyear = ""; // int
        releaselabel = ""; // string
    }
    else // pressed the ADD button
    {
        if (Validation.IsValid())
        {
            @*var valid = true;
                if (artistid.Equals("0"))
                {
                    valid = false;
                    <div class="col-12 text-center">
                        <p style="color:darkslateblue">
                            You must select artist id
                        </p>
                    </div>
                }
                if (valid)
                {*@
try
{
    // create sql command
    var inscommand = "INSERT INTO Albums "
        + "(Title, ArtistId, ReleaseYear, ReleaseLabel) "
        + "VALUES(@0, @1, @2, @3)";
    // execute the command
    db.Execute(inscommand, title,
        artistid.Equals("0") ? null : artistid,
        //string.IsNullOrEmpty(artistid.ToString()) ? null : artistid,
        //string.IsNullOrEmpty(title) ? null : title,
        string.IsNullOrEmpty(releaseyear) ? null : releaseyear,
        string.IsNullOrEmpty(releaselabel) ? null : releaselabel);
                <div class="col-12 text-center">
                    <p style="color:green">
                        Album has been added
                    </p>
                </div>
            }
            catch (Exception ex)
            {
                <div class="col-12 text-center">
                    <p style="color:firebrick; font-size:large">
                        Processing error: @ex.Message
                    </p>
                </div>
            }
            //}
        }
    }
}
else
{
    //// empty the form fields
    //    title = ""; // string
    //    artistid = "0"; // int
    //    releaseyear = ""; // int
    //    releaselabel = ""; // string
}

@Html.ValidationSummary()
<form id="theform" method="post">

    @*Pseudo-header*@
    <div>
        <font size="+2">
            <p><strong>Enter Album</strong></p>
        </font>
    </div>

    <div class="row">

        @*This row contains the fields*@
        <div class="col-1 text-right">
            <label id="lblTitle" for="Title">Title:</label>
        </div>
        <div class="col-11 text-left">
            <input type="text" name="Title" value="@title" />
        </div><br />


        <div class="col-1 text-right">
            <label id="lblArtistList" for="ArtistList">Artist:</label>
        </div>
        <div class="col-11 text-left">
            <select name="ArtistList">
                <option value="0">select...</option>
                @foreach (var acollectionrow in artistlist)
                {
                    if (acollectionrow.ArtistId.ToString() == artistid)
                    {
                        <option value="@acollectionrow[0]" selected>@acollectionrow[1]</option>
                    }
                    else
                    {
                        <option value="@acollectionrow[0]">@acollectionrow[1]</option>
                    }
                }
            </select>
        </div><br />

        <div class="col-1 text-right">
            <label id="lblReleaseYear" for="ReleaseYear">Year:</label>
        </div>
        <div class="col-11 text-left">
            <input type="number" value="@releaseyear"
                   id="ReleaseYear" name="ReleaseYear" />
        </div>

        <div class="col-1 text-right">
            <label id="lblReleaseLabel" for="ReleaseLabel">Label:</label>
        </div>
        <div class="col-11 text-left">
            <input type="text" value="@releaselabel"
                   id="ReleaseLabel" name="ReleaseLabel" />
        </div>

    </div>
    @*This row contains the submit/clear buttons*@
    <div class="row">
        <div class="col-12 text-center">
            <input type="submit" id="FormButton" name="FormButton"
                   class="btn btn-primary" value="Add" />
            <input type="submit" id="FormButton" name="FormButton" formnovalidate
                   class="btn" value="Clear" />
        </div>
    </div>

</form>

